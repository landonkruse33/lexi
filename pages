# Trigram Text Prediction Model

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trigram Text Prediction</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        #inputField {
            width: 100%;
            padding: 10px;
            font-size: 16px;
        }
        #predictedWord {
            position: absolute;
            background: rgba(255, 255, 255, 0.7);
            padding: 5px;
            border: 1px solid #ccc;
            display: none;
        }
    </style>
</head>
<body>
    <h1>Trigram Text Prediction Model</h1>
    <input type="text" id="inputField" placeholder="Type your text here..." />
    <div id="predictedWord"></div>

    <script>
        const inputField = document.getElementById('inputField');
        const predictedWord = document.getElementById('predictedWord');
        const trigramModel = {}; // Placeholder for trigram model

        inputField.addEventListener('input', function() {
            const words = this.value.split(' ');
            const lastTwoWords = words.slice(-2).join(' ');
            // Logic to predict the next word based on lastTwoWords
            const prediction = getPrediction(lastTwoWords); // Placeholder function
            if (prediction) {
                predictedWord.textContent = prediction;
                predictedWord.style.display = 'block';
                predictedWord.style.left = `${inputField.offsetLeft + inputField.offsetWidth}px`;
                predictedWord.style.top = `${inputField.offsetTop}px`;
            } else {
                predictedWord.style.display = 'none';
            }
        });

        inputField.addEventListener('keydown', function(event) {
            if (event.key === 'Tab') {
                event.preventDefault();
                const words = this.value.split(' ');
                words[words.length - 1] = predictedWord.textContent;
                this.value = words.join(' ');
                predictedWord.style.display = 'none';
            }
        });

        function getPrediction(lastTwoWords) {
            // Placeholder for prediction logic
            return trigramModel[lastTwoWords] || '';
        }
    </script>
</body>
</html>
